#+TITLE: Emacs configuration
#+AUTHOR: Lucas Cordeiro

* Default configs
  
** General

Enable to answer yes/no questions with y/n

#+BEGIN_SRC emacs-lisp
  (defalias 'yes-or-no-p 'y-or-n-p)
#+END_SRC

Fix up the "dead" keys.

#+BEGIN_SRC emacs-lisp
  (require 'iso-transl)
#+END_SRC

*** Setup personal info

#+BEGIN_SRC emacs-lisp
  (setq user-full-name "Lucas Edi C. de Brito"
        user-mail-address "ecdb.lucas@gmail.com")
#+END_SRC

** Theme and display options

Hide the menu bar, scroll bar and tool bar.

#+BEGIN_SRC emacs-lisp
  (setq inhibit-startup-screen t)

  (menu-bar-mode -1)
  (tool-bar-mode -1)
  (scroll-bar-mode -1)
#+END_SRC

Set tabs to be 4 spaces wide and highlight parenthesis.

#+BEGIN_SRC emacs-lisp
  (setq default-tab-width 4)
  (show-paren-mode 1)
#+END_SRC

Theme, cursor color, and font.

#+BEGIN_SRC emacs-lisp
  (add-to-list 'custom-theme-load-path (concat user-emacs-directory "themes"))
  (load-theme 'gruvbox t)
  (set-cursor-color "#ffffff")
  (set-face-attribute 'default nil
                      :font "Operator Mono"
                      :height 115)
#+END_SRC

** Melpa

Melpa repository

#+BEGIN_SRC emacs-lisp
  (require 'package)

  (add-to-list 'package-archives
               '("melpa" . "https://melpa.org/packages/"))

  (when (< emacs-major-version 24)
    (add-to-list 'package-archives '("gnu" . "https://elpa.gnu.org/packages/")))
#+END_SRC

Ensure packages are installed correctly

#+BEGIN_SRC emacs-lisp
  (defun ensure-package-installed (&rest packages)
        "Assure every package is installed, ask for installation if itâ€™s not.
  Return a list of installed packages or nil for every skipped package."
        (mapcar
         (lambda (package)
           (if (package-installed-p package)
                   nil
                 (package-install package)
                 package))
         packages))

  (package-refresh-contents)
#+END_SRC

** Packages

Installed packages

#+BEGIN_SRC emacs-lisp
  (ensure-package-installed
   'gruvbox-theme
   'evil
   'magit
   'linum-relative
   'org
   'org-bullets
   'org-beautify-theme
   'smartparens
   'web-mode
   'js2-mode
   'helm)

  (package-initialize)
#+END_SRC

** =evil-mode=

Setup evil mode

#+BEGIN_SRC emacs-lisp
  (require 'evil)
  (evil-mode)
#+END_SRC

** File encoding

Prefer UTF-8 encoding for files

#+BEGIN_SRC emacs-lisp
  (prefer-coding-system 'utf-8)
#+END_SRC

** Helm

Setup heml for better searching

#+BEGIN_SRC emacs-lisp
  (require 'helm-config)
#+END_SRC


* Language-specific

** HTML

Add emmet-mode for quick tag creation and web-mode, also, set indentation for 4 spaces.

#+BEGIN_SRC emacs-lisp
  (add-hook 'html-mode-hook
            (lambda ()
              (web-mode)
              (set (make-local-variable 'sgml-basic-offset) 4)))
            
  (add-hook 'web-mode-hook 'emmet-mode)
#+END_SRC

** Javscript

Add js2-mode to common javascript files.
Also, disable warning for missing semicolons.

#+BEGIN_SRC emacs-lisp
  (add-to-list 'auto-mode-alist '("\\.js\\'" . js2-mode))

  (setq js2-strict-missing-semi-warning nil)
#+END_SRC

*** Flow

Setup flow-type

#+BEGIN_SRC emacs-lisp
  (load-file "~/.emacs.d/modules/flow/flow.el")
#+END_SRC

** Smartparens

Add global smartparens mode

#+BEGIN_SRC emacs-lisp
  (smartparens-global-mode)
#+END_SRC

** Lisp

Auto add smartparens mode and eldoc-mode to all lisp modes

#+BEGIN_SRC emacs-lisp
  (setq lispy-mode-hooks
        '(clojure-mode-hook
          emacs-lisp-mode-hook
          lisp-mode-hook
          scheme-mode-hook))

  (dolist (hook lispy-mode-hooks)
    (add-hook hook
              (lambda()
                (smartparens-mode)
                (eldoc-mode))))
#+END_SRC


* Org-mode
  
** Display preferences

Show bullets instead of asteriscs.

#+BEGIN_SRC emacs-lisp
  (require 'org-bullets)

  (add-hook 'org-mode-hook
            (lambda()
              (org-bullets-mode 1)))
#+END_SRC

Show utf-8 characters

#+BEGIN_SRC emacs-lisp
  (setq org-pretty-entities t)
#+END_SRC

